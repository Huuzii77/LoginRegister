<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.mapper.CommentLikesRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zking.entity.CommentLikesRecord" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="articleId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="originalAuthor" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="likerId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="likeDate" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, articleId, originalAuthor, pId, likerId, likeDate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment_likes_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_likes_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zking.entity.CommentLikesRecord" >
    insert into comment_likes_record (id, articleId, originalAuthor, 
      pId, likerId, likeDate
      )
    values (#{id,jdbcType=INTEGER}, #{articleid,jdbcType=BIGINT}, #{originalauthor,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{likerid,jdbcType=INTEGER}, #{likedate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.entity.CommentLikesRecord" >
    insert into comment_likes_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleid != null" >
        articleId,
      </if>
      <if test="originalauthor != null" >
        originalAuthor,
      </if>
      <if test="pid != null" >
        pId,
      </if>
      <if test="likerid != null" >
        likerId,
      </if>
      <if test="likedate != null" >
        likeDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=BIGINT},
      </if>
      <if test="originalauthor != null" >
        #{originalauthor,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="likerid != null" >
        #{likerid,jdbcType=INTEGER},
      </if>
      <if test="likedate != null" >
        #{likedate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.entity.CommentLikesRecord" >
    update comment_likes_record
    <set >
      <if test="articleid != null" >
        articleId = #{articleid,jdbcType=BIGINT},
      </if>
      <if test="originalauthor != null" >
        originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pId = #{pid,jdbcType=INTEGER},
      </if>
      <if test="likerid != null" >
        likerId = #{likerid,jdbcType=INTEGER},
      </if>
      <if test="likedate != null" >
        likeDate = #{likedate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.entity.CommentLikesRecord" >
    update comment_likes_record
    set articleId = #{articleid,jdbcType=BIGINT},
      originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      pId = #{pid,jdbcType=INTEGER},
      likerId = #{likerid,jdbcType=INTEGER},
      likeDate = #{likedate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>