<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.mapper.CommentRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zking.entity.CommentRecord" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="pId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="articleId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="originalAuthor" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answererId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="respondentId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commentDate" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="likes" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zking.entity.CommentRecord" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="pId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="articleId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="originalAuthor" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answererId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="respondentId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commentDate" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="likes" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commentContent" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, pId, articleId, originalAuthor, answererId, respondentId, commentDate, likes
  </sql>
  <sql id="Blob_Column_List" >
    commentContent
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.entity.CommentRecord" >
    insert into comment_record (id, pId, articleId, 
      originalAuthor, answererId, respondentId, 
      commentDate, likes, commentContent
      )
    values (#{id,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{articleid,jdbcType=BIGINT}, 
      #{originalauthor,jdbcType=VARCHAR}, #{answererid,jdbcType=INTEGER}, #{respondentid,jdbcType=INTEGER}, 
      #{commentdate,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, #{commentcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.entity.CommentRecord" >
    insert into comment_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pId,
      </if>
      <if test="articleid != null" >
        articleId,
      </if>
      <if test="originalauthor != null" >
        originalAuthor,
      </if>
      <if test="answererid != null" >
        answererId,
      </if>
      <if test="respondentid != null" >
        respondentId,
      </if>
      <if test="commentdate != null" >
        commentDate,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="commentcontent != null" >
        commentContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=BIGINT},
      </if>
      <if test="originalauthor != null" >
        #{originalauthor,jdbcType=VARCHAR},
      </if>
      <if test="answererid != null" >
        #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null" >
        #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null" >
        #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.entity.CommentRecord" >
    update comment_record
    <set >
      <if test="pid != null" >
        pId = #{pid,jdbcType=BIGINT},
      </if>
      <if test="articleid != null" >
        articleId = #{articleid,jdbcType=BIGINT},
      </if>
      <if test="originalauthor != null" >
        originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      </if>
      <if test="answererid != null" >
        answererId = #{answererid,jdbcType=INTEGER},
      </if>
      <if test="respondentid != null" >
        respondentId = #{respondentid,jdbcType=INTEGER},
      </if>
      <if test="commentdate != null" >
        commentDate = #{commentdate,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="commentcontent != null" >
        commentContent = #{commentcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zking.entity.CommentRecord" >
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      commentContent = #{commentcontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.entity.CommentRecord" >
    update comment_record
    set pId = #{pid,jdbcType=BIGINT},
      articleId = #{articleid,jdbcType=BIGINT},
      originalAuthor = #{originalauthor,jdbcType=VARCHAR},
      answererId = #{answererid,jdbcType=INTEGER},
      respondentId = #{respondentid,jdbcType=INTEGER},
      commentDate = #{commentdate,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>